#!/usr/bin/env bash
# Copyright (c) 2020 The Toltec Contributors
# SPDX-License-Identifier: MIT

pkgnames=(folly)
pkgdesc="Z-machine interpreter for interactive fiction"
url="https://github.com/bkirwi/folly"
pkgver=0.0.1-1
timestamp=2022-01-29T15:35:52-05:00
section=games
maintainer="Ben Kirwin <ben@kirw.in>"
license=MIT
installdepends=(display)
makedepends=(build:librust-clang-sys-dev build:libclang-dev build:libc6 build:libc6-dev build:clang)

image=rust:v2.2.2

# Whitespace-separated list of source archives that are needed to build the package
source=(
    https://github.com/bkirwi/folly/archive/9e5947dbe25a5db6d7d7579fff4106595c0585ff.zip
    folly.draft
)
# SHA-256 checksums of the source archives above
sha256sums=(
    25bd5e024bf076435eaed0abf37d971132f2e7503a5b09ea31a4a22170c1d7f0
    SKIP
)

build() {
    X_TOOLS="/opt/x-tools/arm-remarkable-linux-gnueabihf/arm-remarkable-linux-gnueabihf"
    X_TOOLS_CPP="$X_TOOLS/include/c++/10.2.0"

    # Arguments for bindgen's usage of clang
    export BINDGEN_EXTRA_CLANG_ARGS="\
      --sysroot=$X_TOOLS/sysroot\
      -I$X_TOOLS_CPP -I$X_TOOLS_CPP/arm-remarkable-linux-gnueabihf"

    # Arguments for the gcc-based tensorflow build in the build.rs file of tflite-rs.
    export TFLITE_RS_MAKE_TARGET_TOOLCHAIN_PREFIX="arm-remarkable-linux-gnueabihf-"
    export TFLITE_RS_MAKE_EXTRA_CFLAGS="$BINDGEN_EXTRA_CLANG_ARGS -mfpu=neon -mfloat-abi=hard -mcpu=cortex-a9"

    cargo build --release

    # Save the build system the trouble of stripping unused binaries
    rm -r target/release/build
    rm -r target/armv7-unknown-linux-gnueabihf/release/build
}

package() {
    # Install the app binary and the draft file
    install -D -m 755 "$srcdir"/target/armv7-unknown-linux-gnueabihf/release/folly "$pkgdir"/opt/bin/folly
    install -D -m 644 "$srcdir"/folly.draft "$pkgdir"/opt/etc/draft/folly.draft
}
